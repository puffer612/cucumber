{"name": "call interface withOut userId -- @1.1 ", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"d:\\python\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"d:\\python\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\stepDefinitions.py\", line 52, in assertResult\n    code = re.sub('[\\']','',Api.getObjectValue(resultCode,content.responseData))\n  File \"D:\\python_workspace\\cucumber\\features\\utils\\Apis.py\", line 39, in getObjectValue\n    json_response = response.json()\n  File \"d:\\python\\lib\\site-packages\\requests\\models.py\", line 900, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"d:\\python\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"d:\\python\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"d:\\python\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "steps": [{"name": "Given api http://192.168.10.102:7010/icall/call", "status": "passed", "start": 1610946793398, "stop": 1610946793399}, {"name": "And param", "status": "passed", "attachments": [{"name": ".text", "source": "8b83489a-5797-4b1f-8eb5-262a60487618-attachment.txt", "type": "text/plain"}], "start": 1610946793399, "stop": 1610946793401}, {"name": "And Cookiex is a table", "status": "passed", "attachments": [{"name": ".table", "source": "6fbd94f1-9f57-433a-a42b-e46b87478c88-attachment.csv", "type": "text/csv"}], "start": 1610946793401, "stop": 1610946793402}, {"name": "When GET", "status": "passed", "start": 1610946793402, "stop": 1610946793410}, {"name": "Then JSONPATH_ASSERT \"result\" equals \"GB2001\"", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"d:\\python\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"d:\\python\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\stepDefinitions.py\", line 52, in assertResult\n    code = re.sub('[\\']','',Api.getObjectValue(resultCode,content.responseData))\n  File \"D:\\python_workspace\\cucumber\\features\\utils\\Apis.py\", line 39, in getObjectValue\n    json_response = response.json()\n  File \"d:\\python\\lib\\site-packages\\requests\\models.py\", line 900, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"d:\\python\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"d:\\python\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"d:\\python\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "start": 1610946793410, "stop": 1610946793414}], "parameters": [{"name": "resultCode", "value": "result"}, {"name": "code", "value": "GB2001"}], "start": 1610946793396, "stop": 1610946793415, "uuid": "5239eb49-7682-45a4-9cfc-aef05be1743a", "historyId": "8cab83f22fb7e9e437ce7659875dcc3d", "fullName": "features/feature/B0001.feature:call interface withOut userId", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}